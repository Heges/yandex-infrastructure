---
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  backend
  namespace: "{{ .Release.Namespace }}"
  labels:
    app.kubernetes.io/name: sausage-backend
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: sausage-store
    env: "{{ .Values.global.environment }}"
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: {{ .Values.maxUnavailable }}
      maxSurge: {{ .Values.maxSurge }} 
  replicas: {{ .Values.replicas }}
  revisionHistoryLimit: {{ .Values.global.revisionHistoryLimit }}
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
      annotations:
        prometheus.io/path: /actuator/prometheus
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
    spec:
      containers:
      - name: backend
        image: "{{ .Values.global.repository }}/{{ .Values.imageName }}:{{ .Values.imageTag }}"
        imagePullPolicy: IfNotPresent
        env:
          - name: VAULT_HOST
            value: "{{ .Values.global.vaultHost }}"
          - name: VAULT_TOKEN
            valueFrom:
              secretKeyRef:
                name: vault
                key: vault_token
        ports:
          - name: backend
            containerPort: {{ .Values.port }} 
        livenessProbe:
          httpGet:
            path: {{ .Values.path }}
            port: {{ .Values.port }}
          initialDelaySeconds: {{ .Values.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.timeoutSeconds }}
          successThreshold: {{ .Values.successThreshold }}
          failureThreshold: {{ .Values.failureThreshold }}
          periodSeconds: {{ .Values.periodSeconds }}
      imagePullSecrets:
        - name: docker-config-secret
